###############################################################################
# Copyright (c) 2008, 2021 IBM Corporation and others.
#
# This program and the accompanying materials
# are made available under the terms of the Eclipse Public License 2.0
# which accompanies this distribution, and is available at
# https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
# available message ids  68, 70, 71, 75, 80,
# 82, 83, 88, 90, 93

#API baseline 
1 = An API baseline has not been set for the current workspace.
57 = There is a possible API baseline mismatch since none of the workspace projects is in the baseline.
60 = This plug-in is not present in the currently active API baseline.
31 = API analysis aborted for ''{0}'' since its build path is incomplete
38 = Execution environment references were not checked for ''{0}'' because no environment descriptions are installed. 

#invalid since tag problems
2 = Invalid @since {0} tag on {2}; expecting @since {1}
3 = Invalid @since tag ''{0}'' on {1}; expecting two fragments
4 = Missing @since tag on {0}

#version number problems
5 = The major version should be incremented in version {0}, since API breakage occurred since version {1}
6 = The major version should be the same for version {0}, since no API breakage occurred since version {1}
7 = The minor version should be incremented in version {0}, since new APIs have been added since version {1}
43 = The minor version should be incremented in version {0}, since execution environments have been changed since version {1}
58 = The service version is increased unnecessarily since either the major or minor or service version is already increased
59 = The minor version is increased unnecessarily since either the major or minor version is already increased
56 = The minor version should be the same for version {0}, since no new APIs have been added since version {1}
19 = The major version should be incremented in version {0}, because the modification of the version range for the re-exported bundle {1} requires a major version change
20 = The minor version should be incremented in version {0}, because the modification of the version range for the re-exported bundle {1} requires a minor version change
62 = The major version should be incremented in version {0}, because the bundle {1} is no longer re-exported
63 = The minor version for the package ''{0}'' should be incremented to version {1}, since new APIs have been added since version {2}
65 = The major version for the package ''{0}'' should be incremented to version {1}, since API breakage occurred since version {2}

#API usage problems
#{0} = referenced type name
#{1} = local type name
#{2} = field or method name

8 = {1} illegally implements {0}
9 = {1} illegally extends {0}
10 = {1} illegally instantiates {0}
11 = {1}.{2} illegally overrides {0}.{2}
12 = {1} illegally references field {0}.{2}
13 = {1} extends non-API type {0}
48=  {1} leaks APIs from the superclass {0}
50=  {1} leaks APIs from the superinterface {0}
14 = {1} implements non-API interface {0}
15 = {1}.{2} declared as non-API type {0}
16 = {1}.{2} has non-API return type {0}
17 = {1}.{2} has non-API parameter type {0}
18 = The local type {0} defined in {1} illegally implements {2}
22 = Tag ''{0}'' is already defined on this element
24 = {1} illegally implements {2} via {0}
25 = The local type {0} defined in {1} illegally extends {2}
27 = An anonymous type defined in {0} illegally implements {1}
28 = An anonymous type defined in {0} illegally extends {1}
30 = The API problem filter for: ''{0}'' is no longer used
33 = The method {1}.{2} referenced in {0} is not defined in the bundle''s required execution environment: {3} 
34 = The constructor {1} referenced in {0} is not defined in the bundle''s required execution environment: {2}
35 = The field {1}.{2} referenced in {0} is not defined in the bundle''s required execution environment: {3}
36 = The type {1} referenced in {0} is not defined in the bundle''s required execution environment: {2}
37 = The local type {0} defined in {1} illegally implements {3} via {2}
42 = The annotation {0} is being illegally referenced
45 = Annotation ''{0}'' is already defined on this element
46 = Annotation ''{0}'' is unsupported on {1}
109 = Constructor for {1} with non-API parameter type {0}
110 = {1} illegally references constructor {0}
111 = {1} illegally references method {0}.{2}
112 = Tag ''{0}'' is unsupported on {1}

#compatibility problems

#added
# {0} = type name, {1} = annotation member declaration
21 = The class bound for type parameter {1} for {0} has been added
23 = The constructor {0}.{1} has been added
26 = The interface bound {2} for type parameter {1} for {0} has been added
29 = The method {0}.{1} without a default value has been added
32 = The type parameter {1} has been added to existing type parameters for {0}
39 = The field {0}.{1} in an annotation that is intended to be extended has been added
40 = The field {0}.{1} in an interface that is intended to be implemented or extended has been added
41 = The method {0}.{1} that has to be implemented has been added
44 = The method {0}.{1} in an interface that is intended to be implemented has been added
47 = The default method {0}.{1} in an interface has been added
49 = The field {0}.{1} has been added to a class
51 = Superinterface that has methods to be implemented is added to {0} 
53 = Superclass that has methods to be implemented is added to {0}

#changed
52 = The class bound for type parameter {1} in {0} has been changed
54 = The super interfaces set has been reduced ({1}) for type {0}
55 = The visibility of the type {0} has been reduced
61 = The ''final'' keyword has been removed for a compile-time constant static field {0}.{1}
64 = The interface bound {2} for type parameter {1} has been changed in {0}
66 = The ''abstract'' keyword has been added for class {0}
67 = The ''final'' keyword has been added for the type {0}
69 = The ''static'' keyword has been added for field {0}.{1}
72 = The {0} restriction have been added for type {1}
73 = The static member type {0} has been converted to a non-static member type
74 = The superclass for {0} has changed
# This message is using ChoiceFormat in order to fill the argument {1} and {2}
76 = The type {0} has been changed from {1} to {2}
ANNOTATION_ELEMENT_TYPE=an annotation
INTERFACE_ELEMENT_TYPE=an interface
CLASS_ELEMENT_TYPE=a class
ENUM_ELEMENT_TYPE=an enum
81 = The type of the field {0}.{1} has been changed
84 = The constant value {2} of the field {0}.{1} has been changed
85 = A variable argument type has been converted to an array type inside the method {0}.{1}
114 = The visibility of the field {0}.{1} has been reduced
115 = The visibility of the method {0}.{1} has been reduced
116 = The visibility of the constructor {0}.{1} has been reduced
117 = The ''abstract'' keyword has been added for method {0}.{1}
118 = The ''final'' keyword has been added for the field {0}.{1}
119 = The ''final'' keyword has been added for the method {0}.{1}
120 = The ''static'' keyword has been added for the method {0}.{1}
121 = The static field {0}.{1} has been converted to an instance field
122 = The static method {0}.{1} has been converted to an instance method
123 = The ''static'' keyword has been added for the member type {0}
124 = The type argument have been changed for {0}; was {1} and is now {2}

#removed
86 = The default value of the annotation method {0}.{1} has been removed
87 = The API component {0} has been removed
89 = The class bound for the type parameter {1} has been removed in {0}
91 = The constructor {0}.{1} has been removed
92 = The enum constant {0}.{1} has been removed
94 = The field {0}.{1} has been removed
96 = The interface bound {2} for type parameter {1} has been removed for {0}
98 = The method {0}.{1} has been removed
100 = The method {0}.{1} with a default value has been removed
101 = The method {0}.{1} without a default value has been removed
102 = The type {0} has been removed from {1}
103 = The type arguments have been removed for {0}
104 = The member type {0} in {1} has been removed
105 = The type parameter {1} has been removed for {0}
108 = The constant value {2} has been removed for {0}.{1}
113 = The type {0} in {1} is no longer an API
125 = The field {0}.{1} is no longer an API
126 = The method {0}.{1} is no longer an API
127 = The constructor {0}.{1} is no longer an API
128 = The enum constant {0}.{1} is no longer an API
129 = The method {0}.{1} with a default value is no longer an API
130 = The method {0}.{1} without a default value is no longer an API

#additions
#{0} = Javadoc tag name, {1} = java member (class, field, method, etc)
106 = The type argument {1} has been added for {0}
107 = The type argument {1} has been removed for {0}
131 = The superclass hierarchy for {0} has been reduced
132 = The @nooverride restriction has been added for method {0}.{1}
133 = The interface {1} adds method {2} to {0} that is not tagged as @noimplement
99 = API analysis aborted: {0} has unresolved constraints: {1}
134 = The re-exported type {0} in {1} is no longer an API
135 = The re-exported type {0} has been removed from {1}

#API Use Scan breakage error messages 
136 = The type {1} has been deleted, but is called by {2}.
137 = The type {1} can not be resolved, but is called by {2}.
138 = Type {0} has been deleted. It contained {1}, but is called by {2}.
139 = The {1} in type {0} has been deleted, but is called by {2}.
140 = Type {0} has been deleted.  It contained field {1}, but is called by {2}.
141 = The field {1} in type {0} has been deleted, but is called by {2}.